#!/bin/bash

MHOME=`pwd`
DB_HOME=$MHOME
BIN=$MHOME/bin/mongod
PATH_PID=$MHOME/PID
DB_PATH=$DB_HOME/data/db
WAIT=10
WAIT=2

#******
# starting binary checking
#******
binary_check(){
  #echo "Stage 1/2: Begin binary checking..."
  _cat=`which cat`
  if [ ! -x $_cat ]; then 
    echo "cat not exists! ($_cat)"
    exit 1
  fi

  _wc=`which wc`
  if [ ! -x $_wc ]; then
    echo "wc not exists! ($_wc)"
    exit 1
  fi

  _rm=`which rm`
  if [ ! -x $_rm ]; then
    echo "rm not exists! ($_rm)"
    exit 1
  fi

  _grep=`which grep`
  if [ ! -x $_grep ]; then
    echo "grep not exists! ($_grep)"
    exit 1
  fi
  #echo "Stage 1/2: Binary checking... done"
  #echo "------"
}

pid(){
  PN=$MHOME/bin/mongod
  PID=$(ps -ef | grep $PN | grep -v grep | head -n1 |  awk '{print $2;}')
  echo $PID > $PATH_PID
}

start_mongod(){
  if [ -e $PATH_PID ]
  then
    PID=$(cat $PATH_PID)
    echo "mongod is up, PID: $PID"
    exit 1
  fi
  $BIN --dbpath $DB_PATH >> logs/stdout.log 2>&1 &
  #echo BIN=$BIN
  pid
  echo "mongod starts ($PID)"
}

wait_mongod(){
  for ((i = 1; i <= $WAIT; i++));
  do
    sleep 1
    echo "Waited $i seconds for mongod"
  done
}

stop_mongod(){
  PID=$(cat $PATH_PID)
  kill -9 $PID
  echo "mongod ($PID) is stopped"
  rm $PATH_PID
}

restart_mongod(){
  if [ -e $PATH_PID ]
  then
    EPID=$(cat $PATH_PID)
    TPN=$MHOME/bin/mongod
    TPID=$(ps -ef | grep $TPN | grep -v grep | head -n1 |  awk '{print $2;}')
    #echo EPID=$EPID, TPID=$TPID
    if [ $TPID -eq $EPID ]
    then
      echo "mongod exists, won't restart mongod"
    else
      rm $PATH_PID
      kill -9 $TPID
      wait_mongod
      start_mongod
    fi
  else
    start_mongod
  fi
}

case $1 in
  "start")
    binary_check
    start_mongod
    ;;
  "stop")
    stop_mongod
    ;;
  "restart")
    restart_mongod
    ;;
  *)
    echo "Please input..."
    echo "\"$0 start\" for server launching..."
    echo "\"$0 stop\" for server stopping..."
    echo "\"$0 restart\" for server relaunching..."
esac
